// Place your key bindings in this file to override the defaults
[
    {
        "key": "cmd+i",
        "command": "composerMode.agent"
    },
    {
        "key": "cmd+e",
        "command": "-editor.action.toggleScreenReaderAccessibilityMode",
        "when": "accessibilityHelpIsShown"
    },
    {
        "key": "cmd+2",
        "command": "actions.findWithSelection"
    },
    {
        "key": "cmd+e",
        "command": "-actions.findWithSelection"
    },
    {
        "key": "cmd+0",
        "command": "composer.toggleChatAsEditor",
        "when": "composerFocused"
    },
    {
        "key": "cmd+d",
        "command": "-composer.toggleChatAsEditor",
        "when": "composerFocused"
    },
    {
        "key": "cmd+o cmd+p",
        "command": "notebook.addFindMatchToSelection",
        "when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "cmd+d",
        "command": "-notebook.addFindMatchToSelection",
        "when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "cmd+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "cmd+g",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "a cmd+a",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "cmd+g",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "backspace z",
        "command": "workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+g",
        "command": "-workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+w",
        "command": "editor.action.simpleInlineDiffs.acceptAll",
        "when": "editorTextFocus && hasDisplayedSimpleDiff"
    },
    {
        "key": "cmd+g",
        "command": "-editor.action.simpleInlineDiffs.acceptAll",
        "when": "editorTextFocus && hasDisplayedSimpleDiff"
    },
    {
        "key": "cmd+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "cmd+l",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "cmd+d",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+d",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
    },
    {
        "key": "cmd+f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
    },
    {
        "key": "cmd+d",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "shift+cmd+w",
        "command": "editor.action.goToTypeDefinition"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.navigateForward",
        "when": "canNavigateForward"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "cmd+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "cmd+r cmd+,",
        "command": "-editor.createFoldingRangeFromSelection",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+cmd+,",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+d",
        "command": "-composer.fixerrormessage",
        "when": "@composer.isCursorOnLint"
    },
    {
        "key": "cmd+r d",
        "command": "-workbench.files.action.compareWithSaved"
    },
    {
        "key": "cmd+d",
        "command": "-composer.toggleChatAsEditor",
        "when": "composerFocused && !editorTextFocus"
    },
    {
        "key": "cmd+e",
        "command": "-composer.showBackgroundAgentHistory",
        "when": "backgroundComposerEnabled"
    },
    {
        "key": "cmd+r e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "cmd+e",
        "command": "-workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+r cmd+e",
        "command": "-keybindings.editor.defineWhenExpression",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "cmd+e",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus"
    },
    {
        "key": "cmd+f12",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus"
    },
    {
        "key": "cmd+e",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "alt+cmd+b",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+e",
        "command": "-composer.showBackgroundAgentHistory",
        "when": "backgroundComposerEnabled || showBackgroundAgentHistoryAction"
    },
    {
        "key": "cmd+; cmd+e",
        "command": "-testing.debugFailTests"
    },
    {
        "key": "cmd+; e",
        "command": "-testing.reRunFailTests"
    },
    {
        "key": "shift+cmd+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "cmd+s",
        "command": "-chatEditing.saveAllFiles",
        "when": "hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
    },
    {
        "key": "cmd+s",
        "command": "workbench.action.files.save",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "s",
        "command": "-workbench.action.files.save",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "cmd+z",
        "command": "undo",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "z",
        "command": "-undo",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused"
    },
    {
        "key": "cmd+right",
        "command": "-editor.action.inlineSuggest.acceptNextWord",
        "when": "cppSuggestion && !editorReadonly || inlineSuggestionVisible && !editorReadonly"
    }
]